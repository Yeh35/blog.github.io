<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring-boot on sango.h</title>
    <link>https://yeh35.github.io/blog.github.io/tags/spring-boot/</link>
    <description>Recent content in spring-boot on sango.h</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 08 Jun 2020 22:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://yeh35.github.io/blog.github.io/tags/spring-boot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring JPA 1편: Build UP!!</title>
      <link>https://yeh35.github.io/blog.github.io/documents/spring/spring-jpa-core/</link>
      <pubDate>Mon, 08 Jun 2020 22:00:00 +0900</pubDate>
      
      <guid>https://yeh35.github.io/blog.github.io/documents/spring/spring-jpa-core/</guid>
      <description>관계형 DB 와 Java 관계형 DB 와 Java를 연결하는 기본은 JDBC이다. JDBC를 기반으로 여러 방식들이 제시되었다.
JDBC JDBC는 Java Data Base Connectivity으로 JDK 1.1을 기준으로 Java의 표준(java.sql.*)이 되었다.
Java 표준으로 정해졌기 떄문에 사용하려는 DBMS 진영에서 JDBC 드라이버(API를 구현한 라이브러리)를 제공하면 어떤 DBMS든 쉽게 사용할 수 있을 줄 알았다. 하지만 DBMS와 연결하는 API만 표준으로 제공할뿐 실질적은 Query는 직접 작성해야겠다.
 예제  Mybatis: SQL Mapping JDBC를 그냥 사용하니 코드와 SQL이 같이 있어서 불편해.</description>
    </item>
    
    <item>
      <title>Spring Boot Directory</title>
      <link>https://yeh35.github.io/blog.github.io/documents/spring/spring-boot-directory/</link>
      <pubDate>Fri, 05 Jun 2020 20:15:22 +0900</pubDate>
      
      <guid>https://yeh35.github.io/blog.github.io/documents/spring/spring-boot-directory/</guid>
      <description>들어가기전 Yun Blog님 블로그를 참고하였습니다 저의 멋대로 정리한 것임으로.. 자세한 내용은 Yun Blog님 블로그를 보시길 권장드립니다.
패키지 구성의 2가지 유형   계층형 : 각 계층을 대표하는 디렉터리를 기준으로 코드를 작성
└── src├── main│ ├── java│ │ └── com│ │ └── example│ │ └── demo│ │ ├── DemoApplication.java│ │ ├── config│ │ ├── controller│ │ ├── dao│ │ ├── domain│ │ ├── exception│ │ └── service│ └── resources│ └── application.</description>
    </item>
    
    <item>
      <title>스프링 부트와 AWS로 혼자 구현하는 웹 서비스</title>
      <link>https://yeh35.github.io/blog.github.io/documents/spring/jojoldu-spring-boot-alone-building-book/</link>
      <pubDate>Tue, 21 Apr 2020 06:00:00 +0900</pubDate>
      
      <guid>https://yeh35.github.io/blog.github.io/documents/spring/jojoldu-spring-boot-alone-building-book/</guid>
      <description>Beginning 회사에서 Spring + Tomcat로 구축된 WAS에 신규 도메인을 추가할 일이 생겼다.
Java를 사용할 줄 알았기에 쉽게 할 줄 알았지만.. 현실은 코드 복붙을 하고 있는 나를 발견했다&amp;hellip; Spring에 대해서 공부를 해야겠다고 검색을 해보니 디자인부터 이쁜(?) 책이 있어서 사게 되었다.
 summary 책 제목처럼 서비스를 구현부터 서비스를 운영하는 과정을 간략하게 체험해 볼 수 있었다.
하지만 Intellij, Spring, Gradle을 잘 모른다면 삽질을 많이 해야한다.
이동욱작가님의 Github를 보고 환경 구축을 철저하게 하자.
 https://github.</description>
    </item>
    
  </channel>
</rss>